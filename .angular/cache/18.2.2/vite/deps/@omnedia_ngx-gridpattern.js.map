{
  "version": 3,
  "sources": ["../../../../../node_modules/@omnedia/ngx-gridpattern/fesm2022/omnedia-ngx-gridpattern.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewChild, Input } from '@angular/core';\nconst _c0 = [\"OmGridPatternBackground\"];\nconst _c1 = [\"*\"];\nclass NgxGridpatternComponent {\n  constructor() {\n    this.smallGrid = false;\n    this.gridColor = \"rgba(255, 255, 255, 0.2)\";\n    this.gradientColor = \"rgb(0, 0, 0)\";\n    this.gridStyle = {};\n  }\n  set smallGridValue(smallGrid) {\n    this.smallGrid = smallGrid;\n    this.setGridStyle();\n  }\n  set gridColorValue(color) {\n    this.gridColor = color;\n    this.setGridStyle();\n  }\n  set gradientColorValue(color) {\n    this.gradientColor = color;\n    this.setGridStyle();\n  }\n  setGridStyle() {\n    let dataUri = \"\";\n    if (this.smallGrid) {\n      dataUri = `data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='16' height='16' fill='none' stroke='${this.gridColor}' %3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e`;\n    } else {\n      dataUri = `data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='${this.gridColor}' %3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e`;\n    }\n    this.gridStyle[\"background-image\"] = `url(\"${dataUri}\")`;\n    this.gridStyle[\"--om-gridpattern-gradient-color\"] = this.gradientColor;\n  }\n  static {\n    this.ɵfac = function NgxGridpatternComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgxGridpatternComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgxGridpatternComponent,\n      selectors: [[\"om-gridpattern\"]],\n      viewQuery: function NgxGridpatternComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elementRef = _t.first);\n        }\n      },\n      inputs: {\n        styleClass: \"styleClass\",\n        smallGridValue: [0, \"smallGrid\", \"smallGridValue\"],\n        gridColorValue: [0, \"gridColor\", \"gridColorValue\"],\n        gradientColorValue: [0, \"gradientColor\", \"gradientColorValue\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 4,\n      vars: 4,\n      consts: [[1, \"om-gridpattern\", 3, \"ngClass\"], [1, \"om-gridpattern-background\", 3, \"ngStyle\"], [1, \"om-gridpattern-gradient\"]],\n      template: function NgxGridpatternComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelement(2, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.styleClass);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"om-gridpattern-background-small\", ctx.smallGrid);\n          i0.ɵɵproperty(\"ngStyle\", ctx.gridStyle);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgStyle],\n      styles: [\".om-gridpattern[_ngcontent-%COMP%]{position:relative;overflow:hidden;width:100%;height:100%}.om-gridpattern[_ngcontent-%COMP%]   .om-gridpattern-background[_ngcontent-%COMP%]{--om-gridpattern-gradient-color: rgb(0, 0, 0);position:absolute;pointer-events:none;height:100%;width:100%;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='rgba(255, 255, 255, 0.2)'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e\\\")}.om-gridpattern[_ngcontent-%COMP%]   .om-gridpattern-background.om-gridpattern-background-small[_ngcontent-%COMP%]{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='16' height='16' fill='none' stroke='rgba(255, 255, 255, 0.2)'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e\\\")}.om-gridpattern[_ngcontent-%COMP%]   .om-gridpattern-background[_ngcontent-%COMP%]   .om-gridpattern-gradient[_ngcontent-%COMP%]{position:absolute;inset:0;-webkit-mask-image:radial-gradient(ellipse at center,transparent 10%,#000);mask-image:radial-gradient(ellipse at center,transparent 10%,#000);background-color:var(--om-gridpattern-gradient-color)}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGridpatternComponent, [{\n    type: Component,\n    args: [{\n      selector: \"om-gridpattern\",\n      standalone: true,\n      imports: [CommonModule],\n      template: \"<div class=\\\"om-gridpattern\\\" [ngClass]=\\\"styleClass\\\">\\n    <div class=\\\"om-gridpattern-background\\\" [ngStyle]=\\\"gridStyle\\\" [class.om-gridpattern-background-small]=\\\"smallGrid\\\">\\n        <div class=\\\"om-gridpattern-gradient\\\"></div>\\n    </div>\\n    <ng-content></ng-content>\\n</div>\",\n      styles: [\".om-gridpattern{position:relative;overflow:hidden;width:100%;height:100%}.om-gridpattern .om-gridpattern-background{--om-gridpattern-gradient-color: rgb(0, 0, 0);position:absolute;pointer-events:none;height:100%;width:100%;background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='rgba(255, 255, 255, 0.2)'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e\\\")}.om-gridpattern .om-gridpattern-background.om-gridpattern-background-small{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='16' height='16' fill='none' stroke='rgba(255, 255, 255, 0.2)'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e\\\")}.om-gridpattern .om-gridpattern-background .om-gridpattern-gradient{position:absolute;inset:0;-webkit-mask-image:radial-gradient(ellipse at center,transparent 10%,#000);mask-image:radial-gradient(ellipse at center,transparent 10%,#000);background-color:var(--om-gridpattern-gradient-color)}\\n\"]\n    }]\n  }], null, {\n    elementRef: [{\n      type: ViewChild,\n      args: [\"OmGridPatternBackground\"]\n    }],\n    styleClass: [{\n      type: Input,\n      args: [\"styleClass\"]\n    }],\n    smallGridValue: [{\n      type: Input,\n      args: [\"smallGrid\"]\n    }],\n    gridColorValue: [{\n      type: Input,\n      args: [\"gridColor\"]\n    }],\n    gradientColorValue: [{\n      type: Input,\n      args: [\"gradientColor\"]\n    }]\n  });\n})();\n\n/*\n * Public API Surface of ngx-gridpattern\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxGridpatternComponent };\n"],
  "mappings": "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",
  "names": []
}
