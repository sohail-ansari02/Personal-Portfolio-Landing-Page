{
  "version": 3,
  "sources": ["../../../../../node_modules/@omnedia/ngx-retro-grid/fesm2022/omnedia-ngx-retro-grid.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, Input } from '@angular/core';\nconst _c0 = [\"*\"];\nclass NgxRetroGridComponent {\n  constructor() {\n    this.style = {};\n  }\n  set gridColor(hexColor) {\n    const hsl = this.hexToHSL(hexColor);\n    this.style[\"--grid-color\"] = `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%, 0.35)`;\n  }\n  set fadeColor(color) {\n    this.style[\"--fade-color\"] = color;\n  }\n  set gridRotation(rotation) {\n    this.style[\"--grid-rotation\"] = rotation;\n  }\n  hexToHSL(hex) {\n    if (Array.from(hex)[0] !== \"#\") {\n      hex = \"#\" + hex;\n    }\n    if (hex.length === 4) {\n      hex = hex.split(\"\").map(char => {\n        if (char === \"#\") {\n          return char;\n        }\n        return char + char;\n      }).join(\"\");\n    }\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!result) {\n      throw new Error(\"Could not parse Hex Color\");\n    }\n    const rHex = parseInt(result[1], 16);\n    const gHex = parseInt(result[2], 16);\n    const bHex = parseInt(result[3], 16);\n    const r = rHex / 255;\n    const g = gHex / 255;\n    const b = bHex / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h = (max + min) / 2;\n    let s = h;\n    let l = h;\n    if (max === min) {\n      return {\n        h: 0,\n        s: 0,\n        l: 100\n      };\n    }\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n    s = s * 100;\n    s = Math.round(s);\n    l = l * 100;\n    l = Math.round(l);\n    h = Math.round(360 * h);\n    return {\n      h,\n      s,\n      l\n    };\n  }\n  static {\n    this.ɵfac = function NgxRetroGridComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgxRetroGridComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgxRetroGridComponent,\n      selectors: [[\"om-retro-grid\"]],\n      inputs: {\n        gridColor: \"gridColor\",\n        fadeColor: \"fadeColor\",\n        gridRotation: \"gridRotation\",\n        styleClass: \"styleClass\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 6,\n      vars: 2,\n      consts: [[1, \"om-retro-grid\", 3, \"ngStyle\", \"ngClass\"], [1, \"om-retro-grid-grid\"], [1, \"om-retro-grid-animation\"], [1, \"om-retro-grid-animate\"], [1, \"om-retro-grid-background\"]],\n      template: function NgxRetroGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵelement(3, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ctx.styleClass);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgStyle],\n      styles: [\".om-retro-grid[_ngcontent-%COMP%]{width:100%;height:100%;position:relative;--grid-color: hsla(0, 0%, 0%, .35);--fade-color: #fff;--grid-rotation: 35deg}.om-retro-grid[_ngcontent-%COMP%]   .om-retro-grid-grid[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;pointer-events:none;perspective:200px;opacity:.5;overflow:hidden}.om-retro-grid[_ngcontent-%COMP%]   .om-retro-grid-grid[_ngcontent-%COMP%]   .om-retro-grid-animation[_ngcontent-%COMP%]{position:absolute;transform:rotateX(var(--grid-rotation)) translate(30%);inset:0;pointer-events:none;margin-left:-100%}.om-retro-grid[_ngcontent-%COMP%]   .om-retro-grid-grid[_ngcontent-%COMP%]   .om-retro-grid-animation[_ngcontent-%COMP%]   .om-retro-grid-animate[_ngcontent-%COMP%]{width:600vw;height:300vh;pointer-events:none;transform-origin:100% 0 0;margin-left:-51%;inset:0;background-image:linear-gradient(90deg,var(--grid-color) 1px,transparent 0),linear-gradient(180deg,var(--grid-color) 1px,transparent 0);background-size:60px 60px;background-repeat:repeat;animation:_ngcontent-%COMP%_om-grid-animation 15s linear infinite}.om-retro-grid[_ngcontent-%COMP%]   .om-retro-grid-grid[_ngcontent-%COMP%]   .om-retro-grid-background[_ngcontent-%COMP%]{position:absolute;inset:0;background-image:linear-gradient(to top,var(--fade-color),transparent 60%,var(--fade-color))}@keyframes _ngcontent-%COMP%_om-grid-animation{0%{transform:translateY(-50%)}to{transform:translateY(0)}}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxRetroGridComponent, [{\n    type: Component,\n    args: [{\n      selector: \"om-retro-grid\",\n      standalone: true,\n      imports: [CommonModule],\n      template: \"<div class=\\\"om-retro-grid\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"styleClass\\\">\\n  <div class=\\\"om-retro-grid-grid\\\">\\n    <div class=\\\"om-retro-grid-animation\\\">\\n      <div class=\\\"om-retro-grid-animate\\\"></div>\\n    </div>\\n    <div class=\\\"om-retro-grid-background\\\"></div>\\n  </div>\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\".om-retro-grid{width:100%;height:100%;position:relative;--grid-color: hsla(0, 0%, 0%, .35);--fade-color: #fff;--grid-rotation: 35deg}.om-retro-grid .om-retro-grid-grid{position:absolute;width:100%;height:100%;pointer-events:none;perspective:200px;opacity:.5;overflow:hidden}.om-retro-grid .om-retro-grid-grid .om-retro-grid-animation{position:absolute;transform:rotateX(var(--grid-rotation)) translate(30%);inset:0;pointer-events:none;margin-left:-100%}.om-retro-grid .om-retro-grid-grid .om-retro-grid-animation .om-retro-grid-animate{width:600vw;height:300vh;pointer-events:none;transform-origin:100% 0 0;margin-left:-51%;inset:0;background-image:linear-gradient(90deg,var(--grid-color) 1px,transparent 0),linear-gradient(180deg,var(--grid-color) 1px,transparent 0);background-size:60px 60px;background-repeat:repeat;animation:om-grid-animation 15s linear infinite}.om-retro-grid .om-retro-grid-grid .om-retro-grid-background{position:absolute;inset:0;background-image:linear-gradient(to top,var(--fade-color),transparent 60%,var(--fade-color))}@keyframes om-grid-animation{0%{transform:translateY(-50%)}to{transform:translateY(0)}}\\n\"]\n    }]\n  }], null, {\n    gridColor: [{\n      type: Input,\n      args: [\"gridColor\"]\n    }],\n    fadeColor: [{\n      type: Input,\n      args: [\"fadeColor\"]\n    }],\n    gridRotation: [{\n      type: Input,\n      args: [\"gridRotation\"]\n    }],\n    styleClass: [{\n      type: Input,\n      args: [\"styleClass\"]\n    }]\n  });\n})();\n\n/*\n * Public API Surface of ngx-retro-grid\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxRetroGridComponent };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,MAAM,CAAC,GAAG;AAChB,IAAM,yBAAN,MAAM,uBAAsB;AAAA,EAC1B,cAAc;AACZ,SAAK,QAAQ,CAAC;AAAA,EAChB;AAAA,EACA,IAAI,UAAU,UAAU;AACtB,UAAM,MAAM,KAAK,SAAS,QAAQ;AAClC,SAAK,MAAM,cAAc,IAAI,OAAO,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,IAAI,CAAC;AAAA,EAChE;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,SAAK,MAAM,cAAc,IAAI;AAAA,EAC/B;AAAA,EACA,IAAI,aAAa,UAAU;AACzB,SAAK,MAAM,iBAAiB,IAAI;AAAA,EAClC;AAAA,EACA,SAAS,KAAK;AACZ,QAAI,MAAM,KAAK,GAAG,EAAE,CAAC,MAAM,KAAK;AAC9B,YAAM,MAAM;AAAA,IACd;AACA,QAAI,IAAI,WAAW,GAAG;AACpB,YAAM,IAAI,MAAM,EAAE,EAAE,IAAI,UAAQ;AAC9B,YAAI,SAAS,KAAK;AAChB,iBAAO;AAAA,QACT;AACA,eAAO,OAAO;AAAA,MAChB,CAAC,EAAE,KAAK,EAAE;AAAA,IACZ;AACA,UAAM,SAAS,4CAA4C,KAAK,GAAG;AACnE,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC7C;AACA,UAAM,OAAO,SAAS,OAAO,CAAC,GAAG,EAAE;AACnC,UAAM,OAAO,SAAS,OAAO,CAAC,GAAG,EAAE;AACnC,UAAM,OAAO,SAAS,OAAO,CAAC,GAAG,EAAE;AACnC,UAAM,IAAI,OAAO;AACjB,UAAM,IAAI,OAAO;AACjB,UAAM,IAAI,OAAO;AACjB,UAAM,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC5B,UAAM,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC5B,QAAI,KAAK,MAAM,OAAO;AACtB,QAAI,IAAI;AACR,QAAI,IAAI;AACR,QAAI,QAAQ,KAAK;AACf,aAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,MACL;AAAA,IACF;AACA,UAAM,IAAI,MAAM;AAChB,QAAI,IAAI,MAAM,KAAK,IAAI,MAAM,OAAO,KAAK,MAAM;AAC/C,YAAQ,KAAK;AAAA,MACX,KAAK;AACH,aAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI;AAC/B;AAAA,MACF,KAAK;AACH,aAAK,IAAI,KAAK,IAAI;AAClB;AAAA,MACF,KAAK;AACH,aAAK,IAAI,KAAK,IAAI;AAClB;AAAA,IACJ;AACA,SAAK;AACL,QAAI,IAAI;AACR,QAAI,KAAK,MAAM,CAAC;AAChB,QAAI,IAAI;AACR,QAAI,KAAK,MAAM,CAAC;AAChB,QAAI,KAAK,MAAM,MAAM,CAAC;AACtB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAyCF;AAvCI,uBAAK,OAAO,SAAS,8BAA8B,mBAAmB;AACpE,SAAO,KAAK,qBAAqB,wBAAuB;AAC1D;AAGA,uBAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,eAAe,CAAC;AAAA,EAC7B,QAAQ;AAAA,IACN,WAAW;AAAA,IACX,WAAW;AAAA,IACX,cAAc;AAAA,IACd,YAAY;AAAA,EACd;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,mBAAmB;AAAA,EACjC,oBAAoB;AAAA,EACpB,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,GAAG,iBAAiB,GAAG,WAAW,SAAS,GAAG,CAAC,GAAG,oBAAoB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC,GAAG,uBAAuB,GAAG,CAAC,GAAG,0BAA0B,CAAC;AAAA,EAChL,UAAU,SAAS,+BAA+B,IAAI,KAAK;AACzD,QAAI,KAAK,GAAG;AACV,MAAG,gBAAgB;AACnB,MAAG,eAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;AACvD,MAAG,UAAU,GAAG,OAAO,CAAC;AACxB,MAAG,aAAa;AAChB,MAAG,UAAU,GAAG,OAAO,CAAC;AACxB,MAAG,aAAa;AAChB,MAAG,aAAa,CAAC;AACjB,MAAG,aAAa;AAAA,IAClB;AACA,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,WAAW,IAAI,KAAK,EAAE,WAAW,IAAI,UAAU;AAAA,IAC/D;AAAA,EACF;AAAA,EACA,cAAc,CAAC,cAAiB,SAAY,OAAO;AAAA,EACnD,QAAQ,CAAC,25CAA25C;AACt6C,CAAC;AA/GL,IAAM,wBAAN;AAAA,CAkHC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,uBAAuB,CAAC;AAAA,IAC9F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,SAAS,CAAC,YAAY;AAAA,MACtB,UAAU;AAAA,MACV,QAAQ,CAAC,knCAAknC;AAAA,IAC7nC,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,cAAc;AAAA,IACvB,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,EACH,CAAC;AACH,GAAG;",
  "names": []
}
